version: "3.8"

x-kafka-common-env: &kafka-common-env # KRaft settings
  CLUSTER_ID: "ciVva32pQkC5OMiXUF_O2w"
  KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka1:9093,2@kafka2:9093,3@kafka3:9093"
  KAFKA_PROCESS_ROLES: "broker,controller"
  KAFKA_LISTENERS: "PLAINTEXT://:9092,CONTROLLER://:9093"
  KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
  KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
  KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
  # Common settings
  KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
  KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

networks:
  kafka-net:
    driver: bridge

services:
  kafka1:
    image: apache/kafka:4.1.0
    container_name: kafka1
    ports:
      - "9092:9092"
    environment:
      <<: *kafka-common-env
      KAFKA_NODE_ID: 1
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka1:9092"
    networks:
      - kafka-net

  kafka2:
    image: apache/kafka:4.1.0
    container_name: kafka2
    ports:
      - "9093:9092"
    environment:
      <<: *kafka-common-env
      KAFKA_NODE_ID: 2
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka2:9092"
    networks:
      - kafka-net

  kafka3:
    image: apache/kafka:4.1.0
    container_name: kafka3
    ports:
      - "9094:9092"
    environment:
      <<: *kafka-common-env
      KAFKA_NODE_ID: 3
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka3:9092"
    networks:
      - kafka-net

  postgres-order:
    image: postgres:17
    container_name: postgres-order
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: order
    ports:
      - "5432:5432"
    volumes:
      - order-data:/var/lib/postgresql/data
    networks:
      - kafka-net

  order:
    build:
      context: ./apps/order
      # dockerfile: Dockerfile # Uncomment if your Dockerfile has a different name
    container_name: order
    depends_on:
      - kafka1
      - kafka2
      - kafka3
      - postgres-order
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-order:5432/order
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_KAFKA_BOOTSTRAP_SERVERS: "kafka1:9092,kafka2:9092,kafka3:9092"
    networks:
      - kafka-net

  postgres-payment:
    image: postgres:17
    container_name: postgres-payment
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: payment
    ports:
      - "5433:5432" # Use a different host port to avoid conflict
    volumes:
      - payment-data:/var/lib/postgresql/data
    networks:
      - kafka-net

  payment:
    build:
      context: ./apps/payment
    container_name: payment
    depends_on:
      - kafka1
      - kafka2
      - kafka3
      - postgres-payment
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-payment:5432/payment
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_KAFKA_BOOTSTRAP_SERVERS: "kafka1:9092,kafka2:9092,kafka3:9092"
    networks:
      - kafka-net

  postgres-inventory:
    image: postgres:17
    container_name: postgres-inventory
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: inventory
    ports:
      - "5434:5432" # Use a different host port to avoid conflict
    volumes:
      - inventory-data:/var/lib/postgresql/data
    networks:
      - kafka-net

  inventory:
    build:
      context: ./apps/inventory
    container_name: inventory
    depends_on:
      - kafka1
      - kafka2
      - kafka3
      - postgres-inventory
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-inventory:5432/inventory
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_KAFKA_BOOTSTRAP_SERVERS: "kafka1:9092,kafka2:9092,kafka3:9092"
    networks:
      - kafka-net

volumes:
  order-data:
  payment-data:
  inventory-data:
